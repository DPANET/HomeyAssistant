Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("@sentry/utils");
exports.TRACEPARENT_REGEXP = /([0-9a-f]{2})-([0-9a-f]{32})-([0-9a-f]{16})-([0-9a-f]{2})/;
/**
 * Span containg all data about a span
 */
var Span = /** @class */ (function () {
    function Span(_traceId, _spanId, _recorded, _parent) {
        if (_traceId === void 0) { _traceId = utils_1.uuid4(); }
        if (_spanId === void 0) { _spanId = utils_1.uuid4().substring(16); }
        if (_recorded === void 0) { _recorded = false; }
        this._traceId = _traceId;
        this._spanId = _spanId;
        this._recorded = _recorded;
        this._parent = _parent;
    }
    /**
     * Continues a trace
     * @param traceparent Traceparent string
     */
    Span.fromTraceparent = function (traceparent) {
        var matches = traceparent.match(exports.TRACEPARENT_REGEXP);
        if (matches) {
            var parent_1 = new Span(matches[2], matches[3], matches[4] === '01' ? true : false);
            return new Span(matches[2], undefined, undefined, parent_1);
        }
        return undefined;
    };
    /**
     * @inheritDoc
     */
    Span.prototype.toTraceparent = function () {
        return "00-" + this._traceId + "-" + this._spanId + "-" + (this._recorded ? '01' : '00');
    };
    /**
     * @inheritDoc
     */
    Span.prototype.toJSON = function () {
        return {
            parent: (this._parent && this._parent.toJSON()) || undefined,
            span_id: this._spanId,
            trace_id: this._traceId,
        };
    };
    return Span;
}());
exports.Span = Span;
//# sourceMappingURL=span.js.map